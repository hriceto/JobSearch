<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aSuspendPopup.alt" xml:space="preserve">
    <value>Suspend job post</value>
  </data>
  <data name="aSuspendPopup.title" xml:space="preserve">
    <value>Suspend job post</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnSuspend.Text" xml:space="preserve">
    <value>Suspend job</value>
  </data>
  <data name="hypAddJob.Text" xml:space="preserve">
    <value>Add a new job</value>
  </data>
  <data name="hypEditJob.alt" xml:space="preserve">
    <value>Edit job post</value>
  </data>
  <data name="hypEditJob.Text" xml:space="preserve">
    <value>&lt;span class="glyphicon glyphicon-pencil"&gt;&lt;/span&gt;</value>
  </data>
  <data name="hypEditJob.title" xml:space="preserve">
    <value>Edit job post</value>
  </data>
  <data name="hypPreviewJob.alt" xml:space="preserve">
    <value>Preview job post</value>
  </data>
  <data name="hypPreviewJob.Text" xml:space="preserve">
    <value>&lt;span class="glyphicon glyphicon-eye-open"&gt;&lt;/span&gt;</value>
  </data>
  <data name="hypPreviewJob.title" xml:space="preserve">
    <value>Preview job post</value>
  </data>
  <data name="hypRepublish.alt" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="hypRepublish.Text" xml:space="preserve">
    <value>Add to &lt;span class="glyphicon glyphicon-shopping-cart"&gt;&lt;/span&gt;</value>
  </data>
  <data name="hypRepublish.title" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="hypViewApplications.alt" xml:space="preserve">
    <value>View applications</value>
  </data>
  <data name="hypViewApplications.Text" xml:space="preserve">
    <value>&lt;span class="glyphicon glyphicon-briefcase"&gt;&lt;/span&gt;</value>
  </data>
  <data name="hypViewApplications.title" xml:space="preserve">
    <value>View applications</value>
  </data>
  <data name="lblAddJobDisabled.Text" xml:space="preserve">
    <value> You have reached the maximum number of {0} unpublished job posts and are not allowed to add more jobs until some of those unpublished jobs are moved to a published state.</value>
  </data>
  <data name="strNoJobs" xml:space="preserve">
    <value>&lt;h4 class="text-center"&gt;You have not created any job postings yet. &lt;br /&gt;Please proceed by adding a new job post below.&lt;/h4&gt;</value>
  </data>
  <data name="lblTableCurrent.Text" xml:space="preserve">
    <value>Published Postings</value>
  </data>
  <data name="lblTableExpired.Text" xml:space="preserve">
    <value>Expired Postings</value>
  </data>
  <data name="lblTablePendingReview.Text" xml:space="preserve">
    <value>Published - pending admin review</value>
  </data>
  <data name="lblTableUnpublished.Text" xml:space="preserve">
    <value>Unpublished Postings</value>
  </data>
  <data name="strErrorSuspend" xml:space="preserve">
    <value>An error occurred while suspending the job post. Please refresh the page and try again.</value>
  </data>
  <data name="strOKSuspend" xml:space="preserve">
    <value>The job post was suspended. It will be taken off of the search results shortly.</value>
  </data>
  <data name="strPublishJob" xml:space="preserve">
    <value>Add to &lt;span class="glyphicon glyphicon-shopping-cart"&gt;&lt;/span&gt;</value>
  </data>
  <data name="strPublishJob.alt" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="strPublishJob.title" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="strRePublishJob" xml:space="preserve">
    <value>Edit &lt;span class="glyphicon glyphicon-shopping-cart"&gt;&lt;/span&gt;</value>
  </data>
  <data name="strRePublishJob.alt" xml:space="preserve">
    <value>Edit cart item</value>
  </data>
  <data name="strRePublishJob.title" xml:space="preserve">
    <value>Edit cart item</value>
  </data>
  <data name="strSuspendHeader" xml:space="preserve">
    <value>Please Confirm</value>
  </data>
  <data name="strSuspendQuestion" xml:space="preserve">
    <value>Are you sure that you would like to suspend this job posting?</value>
  </data>
  <data name="lblPublishInstructions.Text" xml:space="preserve">
    <value>To publish an advertisement, you must add it to the shopping cart, and then complete the checkout form. &lt;br /&gt;A credit card is &lt;strong&gt;not&lt;/strong&gt; required when checking out a Junior (free) advertisement.</value>
  </data>
  <data name="lblTablePublishedFuture.Text" xml:space="preserve">
    <value>Pending Publication</value>
  </data>
</root>