<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="hypRegister.Text" xml:space="preserve">
    <value>Register Now</value>
  </data>
  <data name="lblHeader1.Text" xml:space="preserve">
    <value>Welcome to Chicago Is Hiring!&lt;br/&gt;&lt;div class="text-center"&gt;Advertise your open positions with us for &lt;strong&gt;free&lt;/strong&gt;!&lt;/div&gt;</value>
  </data>
  <data name="lblHeader2.Text" xml:space="preserve">
    <value>We are a job search engine startup from the Chicago area and would love to help you in your search for candidates.&lt;br /&gt;&lt;br /&gt; Registration is Fast and Simple. &lt;strong&gt;No Credit Card Required&lt;/strong&gt;.</value>
  </data>
  <data name="strAcceptingApplications" xml:space="preserve">
    <value>Have more than 5 job postings per year and still want to post them for free?</value>
  </data>
  <data name="strAcceptingApplications2" xml:space="preserve">
    <value>&lt;br /&gt;We now accept applications for &lt;u&gt;unlimited free job postings accounts&lt;/u&gt;. You can post as many advertisements as you need, as often as you need, completely free. Just fill out our &lt;a href="{0}"&gt;registration form&lt;/a&gt; to apply.</value>
  </data>
  <data name="strBenefit1" xml:space="preserve">
    <value>&lt;h5&gt;&lt;strong&gt;Free registration&lt;/strong&gt;&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit2" xml:space="preserve">
    <value>&lt;h5&gt;&lt;strong&gt;Free first advertisement and an additional free advertisement every 3 months after.&lt;/strong&gt;&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit3" xml:space="preserve">
    <value>&lt;h5&gt;We verify all accounts and monitor all of the advertisements to ensure that your job ads are listed among other good quality advertisements.&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit4" xml:space="preserve">
    <value>&lt;h5&gt;We advertise your job postings for you and handle resume submissions.&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit5" xml:space="preserve">
    <value>&lt;h5&gt;We offer great low prices for our paid advertisements.&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit6" xml:space="preserve">
    <value>&lt;h5&gt;&lt;strong&gt;No credit card required.&lt;/strong&gt;&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit7" xml:space="preserve">
    <value>&lt;h5&gt;&lt;strong&gt;Fast and simple registration. Easy to use content creation screens.&lt;/strong&gt;&lt;/h5&gt;</value>
  </data>
  <data name="strBenefit8" xml:space="preserve">
    <value>Publish your job advertisement in less than 5 minutes.</value>
  </data>
  <data name="strPublishWithUs" xml:space="preserve">
    <value>Publish your job postings with us by registering below. Visit our &lt;a href="{0}"&gt;pricing page &lt;/a&gt; for more details.</value>
  </data>
  <data name="strWeOffer" xml:space="preserve">
    <value>What we offer?</value>
  </data>
</root>